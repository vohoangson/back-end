spring.profiles.include: 'database'
server:
    servlet:
        context-path: /api
    port: 8080
spring:
    datasource:
        url: jdbc:postgresql://localhost/social_network_job
        username: vohoangson
        password: 12345678
    jpa:
        show-sql: true
        hibernate:
            ddl-auto: update
            naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
        properties:
            hibernate:
                dialect: org.hibernate.dialect.PostgreSQLDialect
                temp:
                    use_jdbc_metadata_defaults: false
                jdbc:
                    lob:
                        non_contextual_creation: true
    security:
      oauth2:
        client:
          registration:
            google:
              clientId: 944571209978-mosg0ek1gmpdfa2ke8uo1pbjj9080mfj.apps.googleusercontent.com
              clientSecret: NsLnq5QStLcC6_w4nc3lifcm
              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - profile
            facebook:
              clientId: 921783344693361
              clientSecret: 96c2abe098a59bcd670b0f96fbcf5e24
              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - public_profile
            github:
              clientId: d3e47fc2ddd966fa4352
              clientSecret: 3bc0f6b8332f93076354c2a5bada2f5a05aea60d
              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - user:email
                - read:user
          provider:
            facebook:
              authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
              tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
              userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://jwork.club/oauth2/login
      - http://localhost:8080/oauth2/login
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
amazonProperties:
  url: https://s3.amazonaws.com
  region: us-east-1
  accessKey: AKIAXNXIB2BRHJTCC54U
  secretKey: 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
  bucketName: amazon.japanwork
rabbitmq:
    image: rabbitmq:management
    ports:
        - "5672:5672"
        - "15672:15672"
